#include <TinyGPS++.h>
#include <SoftwareSerial.h>
#include <NewPing.h>

long duration;
int distance;
#define TRIGGER_PIN  12  // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN     14  // Arduino pin tied to echo pin on the ultrasonic sensor.
#define MAX_DISTANCE 200 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
// Choose two Arduino pins to use for software serial
#define RXD2 16
#define TXD2 17

int GPSBaud = 9600;

// Create a TinyGPS++ object
TinyGPSPlus gps;
void setup()
{
  // Start the Arduino hardware serial port at 9600 baud
  Serial.begin(9600);
Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2);
}

void loop()
{
  // This sketch displays information every time a new sentence is correctly encoded.
   if (Serial2.available() > 0){
    if (gps.encode(Serial2.read())){}}
      utrsonic_function();
      delay(500);
      displayInfo();
      delay(500);
}

void displayInfo()
{     
  if (gps.location.isValid())
  {
    Serial.print("Latitude: ");
    Serial.println(gps.location.lat(), 6);
    Serial.print("Longitude: ");
    Serial.println(gps.location.lng(), 6);
    Serial.print("Altitude: ");
    Serial.println(gps.altitude.meters());
  }
  else
  {
    Serial.println("Location: Not Available");
  }
  
  Serial.print("Date: ");
  if (gps.date.isValid())
  {
    Serial.print(gps.date.month());
    Serial.print("/");
    Serial.print(gps.date.day());
    Serial.print("/");
    Serial.println(gps.date.year());
  }
  else
  {
    Serial.println("Not Available");
  }

//  Serial.print("Time: ");
//  if (gps.time.isValid())
//  {
//    if (gps.time.hour() < 10) Serial.print(F("0"));
//    Serial.print(gps.time.hour());
//    Serial.print(":");
//    if (gps.time.minute() < 10) Serial.print(F("0"));
//    Serial.print(gps.time.minute());
//    Serial.print(":");
//    if (gps.time.second() < 10) Serial.print(F("0"));
//    Serial.print(gps.time.second());
//    Serial.print(".");
//    if (gps.time.centisecond() < 10) Serial.print(F("0"));
//    Serial.println(gps.time.centisecond());
//  }
//  else
//  {
//    Serial.println("Not Available");
//  }

  Serial.println();
 // Serial.println();
   // If 5000 milliseconds pass and there are no characters coming in
  // over the software serial port, show a "No GPS detected" error
   // If 5000 milliseconds pass and there are no characters coming in
  // over the software serial port, show a "No GPS detected" error
//  if (millis() > 5000 && gps.charsProcessed() < 10)
//  {
//    Serial.println("No GPS detected");
//    while(true);
//  }
    //}}
    //delay(1000);
}
void utrsonic_function(){
 //delay(50);                     // Wait 50ms between pings (about 20 pings/sec). 29ms should be the shortest delay between pings.
  Serial.print("Ping: ");
  Serial.print(sonar.ping_cm()); // Send ping, get distance in cm and print result (0 = outside set distance range)
  Serial.println("cm");
    Serial.println();
    distance=sonar.ping_cm();
  //  delay(500); 

  }
  

  
